{"version":3,"sources":["app/views/components/shared/Dialog/InnerModalDialog.js","app/views/components/shared/LinearProgressBar/LinearProgressBar.js","app/views/components/grid/GridLoadingOverlay.js","app/views/components/grid/GridNoRowOverlay.js","app/views/components/tabs/components/TabPanel2.js","app/views/components/grid/Toolbar.js","app/views/components/shared/StatusSwitch/StatusSwitch.js","app/views/components/forms/fields/Roles.js","app/views/components/forms/fields/Branch.js","app/views/components/forms/UsersForm.js","app/views/components/modals/UserModal.js","app/views/components/forms/ResetPasswordForm.js","app/views/components/modals/ResetPasswordModal.js","app/views/components/forms/ChangeRoleForm.js","app/views/components/modals/ChangeRoleModal.js","app/views/components/forms/ChangeBranchForm.js","app/views/components/modals/ChangeBranchModal.js","app/views/components/datatable/UsersDataTable.js","app/views/components/forms/fields/Manager.js","app/views/components/forms/BranchForm.js","app/views/components/modals/BranchModal.js","app/views/components/datatable/BranchesDataTable.js","app/views/components/forms/RolesForm.js","app/views/components/modals/RolesModal.js","app/views/components/datatable/RolesDataTable.js","app/views/components/tabs/options/userstabs.js","app/views/components/tabs/UsersTabs.js","app/views/components/pages/admin/UsersPage.js"],"names":["InnerDialog","props","pageContext","usePage","withClose","open","disablePortal","fullWidth","fullScreen","sx","zIndex","left","display","justifyContent","pb","variant","title","onClick","toggle","children","LinearProgressWithLabel","alignItems","width","mr","minWidth","color","Math","round","value","LinearWithValueLabel","React","progress","setProgress","timer","setInterval","prevProgress","floor","random","clearInterval","GridLoadingOverlay","style","position","paddingLeft","paddingRight","top","defaultTheme","createTheme","useStyles","makeStyles","theme","createStyles","root","flexDirection","fill","palette","mode","fillOpacity","label","marginTop","spacing","GridNoRowOverlay","classes","className","height","viewBox","focusable","fillRule","transform","cx","cy","rx","ry","d","TabPanel2","index","other","role","hidden","overflow","backgroundColor","flexGrow","padding","flexWrap","Toolbar","useState","settingsShow","setSettingsShow","margin","size","marginRight","create","createTitle","disabled","isMultipleDelete","delete","m","type","onChange","placeholder","InputProps","startAdornment","StatusSwitch","status","setStatus","checked","Roles","dispatch","useDispatch","rolesRedux","useSelector","state","roles","setRoles","roleOptions","map","data","id","utilityService","capitalizeFirstLetter","useEffect","get","loading","LinearProgressBar","TextField","select","name","e","setLabel","filter","handleChange","target","required","option","MenuItem","Branch","branchRedux","branches","branch","setBranch","branchOptions","toUpperCase","UsersForm","usersRedux","users","selectedUser","username","setUsername","password","setPassword","email","setEmail","role_id","isShowPassword","setIsShowPassword","handleSubmit","a","preventDefault","Paper","p","mt","elevation","onSubmit","autoComplete","Grid","container","item","xs","action","endAdornment","InputAdornment","IconButton","LoadingButton","marginLeft","Create","InnerModalDialog","params","post","put","isDefaultPassword","setIsDefaultPassword","FormControlLabel","control","Checkbox","ResetPassword","selected","reset","ChangeRoleForm","ChangeRoleModal","selectedParams","change","ChangeBranchForm","ChangeBranchModal","LoadingOverlayOverride","NoRowOverlayOverride","ToolbarOverride","UsersDataTable","rowData","setRowData","setSelected","setSelectedParams","setIsMultipleDelete","modalAction","setModalAction","showUserModal","setShowModal","showResetPasswordModal","setShowResetPasswordModal","showChangeRoleModal","setShowChangeRoleModal","showBranchModal","setShowBranchModal","columns","field","headerName","flex","renderCell","row","hide","align","headerAlign","sortable","is_active","Tooltip","arrow","placement","getActions","icon","handleChangeRole","showInMenu","handleChangeBranch","handleReset","handleDelete","alertService","changeRole","isConfirmed","changeBranch","text","count","rows","recordCount","length","destroy","loadUsers","useCallback","mounted","selectionModel","onSelectionModelChange","checkboxSelection","density","disableSelectionOnClick","disableColumnMenu","components","LoadingOverlay","NoRowsOverlay","componentsProps","toolbar","event","filteredUsers","filterArrayOfObjects","search","sleep","delay","Promise","resolve","setTimeout","Manager","setOpen","options","setOptions","active","Autocomplete","onOpen","onClose","isOptionEqualToValue","getOptionLabel","renderInput","CircularProgress","BranchForm","selectedBranch","location","setLocation","multiline","maxRows","minRows","utilityServices","BranchModal","BranchesDataTable","branchesRedux","manager","handleEdit","loadBranches","filtered","RolesForm","selectedRole","roleName","setRoleName","description","roleDescription","setRoleDescription","RolesModal","RolesDataTable","showRolesModal","setShowRolesModal","loadRoles","content","UsersTabs","userstabs","setValue","newValue","Box","ml","Typography","Tabs","orientation","pt","borderRight","TabIndicatorProps","right","Tab","square","UsersPage"],"mappings":"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","file":"static/js/27.be637925.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { usePage } from '../../../../context/pageContext';\r\n\r\n// MUI Component\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\n\r\n// React-icons\r\nimport { MdClose } from 'react-icons/md';\r\n\r\n\r\nexport default function InnerDialog(props) {\r\n\r\n    const pageContext = usePage();\r\n    const withClose = props?.withClose ?? true;\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={props.open}\r\n                disablePortal\r\n                fullWidth={false}\r\n                fullScreen={false}\r\n                sx={{\r\n                    zIndex: 90,\r\n                    left: pageContext?.open ? 270 : 50,\r\n                }}\r\n            >\r\n                <DialogTitle sx={{ display: 'flex', justifyContent: \"space-between\", pb: 0 }}>\r\n                    <div>\r\n                        <Typography variant=\"h6\">\r\n                            {props.title}\r\n                        </Typography>\r\n                    </div>\r\n                    {withClose &&\r\n                        <IconButton onClick={props.toggle}>\r\n                            <MdClose />\r\n                        </IconButton>\r\n                    }\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    {props.children}\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div >\r\n    );\r\n\r\n}\r\n","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n    return (\r\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n            <Box sx={{ width: '100%', mr: 1 }}>\r\n                <LinearProgress variant=\"determinate\" {...props} />\r\n            </Box>\r\n            <Box sx={{ minWidth: 35 }}>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">{`${Math.round(\r\n                    props.value,\r\n                )}%`}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n    /**\r\n     * The value of the progress indicator for the determinate and buffer variants.\r\n     * Value between 0 and 100.\r\n     */\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function LinearWithValueLabel(props) {\r\n    const [progress, setProgress] = React.useState(32);\r\n\r\n    React.useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            setProgress((prevProgress) => (prevProgress < 89 && prevProgress < 100 ? prevProgress + Math.floor(Math.random() * 10) + 1 : 99));\r\n        }, 800);\r\n        return () => {\r\n            clearInterval(timer);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <Box sx={{ width: '100%' }}>\r\n            <Typography>{props.title}</Typography>\r\n            <LinearProgressWithLabel value={progress} />            \r\n        </Box>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\n// MUI Component\r\nimport { GridOverlay } from '@mui/x-data-grid';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\n\r\nexport default function GridLoadingOverlay() {\r\n    return (\r\n        <GridOverlay>\r\n            <div style={{\r\n                position: 'absolute',\r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n                top: 0,\r\n                width: '100%',\r\n            }}>\r\n                <LinearProgress />\r\n            </div>\r\n        </GridOverlay>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { GridOverlay } from '@mui/x-data-grid';\r\nimport { createTheme } from '@mui/material/styles';\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\n\r\nconst defaultTheme = createTheme();\r\nconst useStyles = makeStyles(\r\n    (theme) =>\r\n        createStyles({\r\n            root: {\r\n                flexDirection: 'column',\r\n                '& .ant-empty-img-1': {\r\n                    fill: theme.palette.mode === 'light' ? '#aeb8c2' : '#262626',\r\n                },\r\n                '& .ant-empty-img-2': {\r\n                    fill: theme.palette.mode === 'light' ? '#f5f5f7' : '#595959',\r\n                },\r\n                '& .ant-empty-img-3': {\r\n                    fill: theme.palette.mode === 'light' ? '#dce0e6' : '#434343',\r\n                },\r\n                '& .ant-empty-img-4': {\r\n                    fill: theme.palette.mode === 'light' ? '#fff' : '#1c1c1c',\r\n                },\r\n                '& .ant-empty-img-5': {\r\n                    fillOpacity: theme.palette.mode === 'light' ? '0.8' : '0.08',\r\n                    fill: theme.palette.mode === 'light' ? '#f5f5f5' : '#fff',\r\n                },\r\n            },\r\n            label: {\r\n                marginTop: theme.spacing(1),\r\n            },\r\n        }),\r\n    { defaultTheme },\r\n);\r\n\r\nexport default function GridNoRowOverlay() {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <GridOverlay className={classes.root}>\r\n                <svg\r\n                    width=\"120\"\r\n                    height=\"100\"\r\n                    viewBox=\"0 0 184 152\"\r\n                    aria-hidden\r\n                    focusable=\"false\"\r\n                >\r\n                    <g fill=\"none\" fillRule=\"evenodd\">\r\n                        <g transform=\"translate(24 31.67)\">\r\n                            <ellipse\r\n                                className=\"ant-empty-img-5\"\r\n                                cx=\"67.797\"\r\n                                cy=\"106.89\"\r\n                                rx=\"67.797\"\r\n                                ry=\"12.668\"\r\n                            />\r\n                            <path\r\n                                className=\"ant-empty-img-1\"\r\n                                d=\"M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z\"\r\n                            />\r\n                            <path\r\n                                className=\"ant-empty-img-2\"\r\n                                d=\"M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z\"\r\n                            />\r\n                            <path\r\n                                className=\"ant-empty-img-3\"\r\n                                d=\"M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zM42.94 49.767h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zM42.94 61.53h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zM121.813 105.032c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569c0 .617-.077 1.216-.221 1.789z\"\r\n                            />\r\n                        </g>\r\n                        <path\r\n                            className=\"ant-empty-img-3\"\r\n                            d=\"M149.121 33.292l-6.83 2.65a1 1 0 0 1-1.317-1.23l1.937-6.207c-2.589-2.944-4.109-6.534-4.109-10.408C138.802 8.102 148.92 0 161.402 0 173.881 0 184 8.102 184 18.097c0 9.995-10.118 18.097-22.599 18.097-4.528 0-8.744-1.066-12.28-2.902z\"\r\n                        />\r\n                        <g className=\"ant-empty-img-4\" transform=\"translate(149.65 15.383)\">\r\n                            <ellipse cx=\"20.654\" cy=\"3.167\" rx=\"2.849\" ry=\"2.815\" />\r\n                            <path d=\"M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z\" />\r\n                        </g>\r\n                    </g>\r\n                </svg>\r\n                <div className={classes.label}>No Rows</div>\r\n            </GridOverlay>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { Box } from '@mui/system'; \r\n\r\nfunction TabPanel2(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            {...other}\r\n            style={{\r\n                overflow: 'hidden',\r\n                backgroundColor: \"#FFF\",\r\n                height: '100%',\r\n                width: '100%',\r\n                paddingRight: '75px'\r\n            }}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{ flexGrow: 1 }}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TabPanel2\r\n","import React from 'react';\r\n\r\n// MUI Components\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/system/Box';\r\nimport Button from '@mui/material/Button';\r\nimport {\r\n  GridToolbarColumnsButton,\r\n  GridToolbarDensitySelector,\r\n  GridToolbarFilterButton,\r\n  GridToolbarExport\r\n} from '@mui/x-data-grid';\r\n\r\n// MUI Styling\r\nimport { createTheme } from '@mui/material/styles';\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\n\r\n// react-icons\r\nimport { FaCog, FaSearch, FaTrash, FaUserPlus } from 'react-icons/fa';\r\n\r\n\r\nconst defaultTheme = createTheme();\r\n\r\nconst useStyles = makeStyles(\r\n  (theme) =>\r\n    createStyles({\r\n      root: {\r\n        padding: theme.spacing(0.5, 0.5, 0),\r\n        justifyContent: 'space-between',\r\n        display: 'flex',\r\n        alignItems: 'flex-start',\r\n        flexWrap: 'wrap',\r\n      }\r\n    }),\r\n  { defaultTheme },\r\n);\r\n\r\nconst Toolbar = (props) => {\r\n\r\n  const [settingsShow, setSettingsShow] = React.useState(false);\r\n  const toggleSettings = () => setSettingsShow(!settingsShow);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Box sx={{ margin: 1, display: 'flex' }}>\r\n        <Button size=\"medium\" sx={{ color: \"#000\", '&:hover': { color: \"#00BFA5\" } }} onClick={toggleSettings}>\r\n          <FaCog style={{ marginRight: 5 }} /> Settings\r\n        </Button>\r\n        {settingsShow &&\r\n          (<div style={{ marginTop: 2 }}>\r\n            <GridToolbarColumnsButton style={{ color: \"#000\" }} />\r\n            <GridToolbarFilterButton style={{ color: \"#000\" }} />\r\n            <GridToolbarDensitySelector style={{ color: \"#000\" }} />\r\n          </div>)\r\n        }\r\n        <GridToolbarExport style={{ color: \"#000\" }} />\r\n        <Button size=\"medium\" sx={{ color: \"#000\", '&:hover': { color: \"#00BFA5\" } }} onClick={() => props.create()}>\r\n          <FaUserPlus style={{ marginRight: 5 }} />\r\n          {props.createTitle ?? \"Create\"}\r\n        </Button>\r\n        <Button disabled={props.isMultipleDelete} size=\"medium\" sx={{ color: \"#000\", '&:hover': { color: \"#E45570\" } }} onClick={() => props.delete()}>\r\n          <FaTrash style={{ marginRight: 5 }} />\r\n          Delete\r\n        </Button>\r\n      </Box>\r\n      <Box sx={{ m: 0 }}>\r\n        <TextField \r\n          type=\"search\" \r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          onChange={props.onChange} \r\n          placeholder=\"Search\"\r\n          InputProps={{\r\n            startAdornment: <FaSearch style={{ marginRight: 5 }} />,\r\n          }}\r\n          sx={{\r\n            padding: 1\r\n          }}\r\n        />\r\n      </Box>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Toolbar;","import { Switch } from '@mui/material';\r\nimport React from 'react'\r\n\r\nexport default function StatusSwitch(props) {\r\n\r\n    const [status, setStatus] = React.useState(props.status);\r\n\r\n    const handleChange = () => {\r\n        setStatus(!status);\r\n        if(props.onChange){\r\n            props.onChange();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Switch checked={status} onChange={handleChange} size={props.size ?? \"small\"} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport utilityService from '../../../../services/utils/utilityServices';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { get } from '../../../../redux/async/rolesAsync';\r\n\r\n// MUI Components\r\nimport TextField from '@mui/material/TextField';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n\r\n// Page Component\r\nimport LinearProgressBar from '../../shared/LinearProgressBar/LinearProgressBar';\r\n\r\n\r\n\r\nconst Roles = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const rolesRedux = useSelector((state) => state.roles.value);\r\n    const [roles, setRoles] = React.useState(props.roles ?? '');\r\n\r\n    const roleOptions = rolesRedux.roles.map(data => {\r\n        return {\r\n            value: data.id,\r\n            label: utilityService.capitalizeFirstLetter(data.role)\r\n        }\r\n    });\r\n\r\n    const handleChange = (value) => {\r\n\r\n        setRoles(value)\r\n        if (props.setRoles) {\r\n            props.setRoles(value)\r\n        }\r\n\r\n        if (props.setLabel) {\r\n            let label = rolesRedux.roles.filter(data => {\r\n                return value === data.id;\r\n            });\r\n     \r\n            props.setLabel(label[0].role)\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        dispatch(get());\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div>\r\n            {rolesRedux.loading && <LinearProgressBar title={rolesRedux.status} />}\r\n            <TextField\r\n                select\r\n                label=\"Roles\"\r\n                name=\"role\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                value={roles}\r\n                onChange={(e) => handleChange(e.target.value)}\r\n                fullWidth\r\n                required\r\n                disabled={rolesRedux.loading}\r\n            >\r\n                {roleOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                        {option.label}\r\n                    </MenuItem>\r\n                ))}\r\n            </TextField>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Roles;","import React from 'react';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { get } from '../../../../redux/async/branchesAsync';\r\n\r\n// MUI Components\r\nimport TextField from '@mui/material/TextField';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n\r\n// Page Component\r\nimport LinearProgressBar from '../../shared/LinearProgressBar/LinearProgressBar';\r\n\r\n\r\nconst Branch = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const branchRedux = useSelector((state) => state.branches.value);\r\n    const [branch, setBranch] = React.useState(props.branch ?? '');\r\n\r\n    const branchOptions = branchRedux.branches.map(data => {\r\n        return {\r\n            value: data.id,\r\n            label: data.branch.toUpperCase()\r\n        }\r\n    });\r\n\r\n    const handleChange = (value) => {\r\n\r\n        setBranch(value)\r\n        if (props.setBranch) {\r\n            props.setBranch(value)\r\n        }\r\n\r\n        if (props.setLabel) {\r\n            let label = branchRedux.branches.filter(data => {\r\n                return value === data.id;\r\n            });\r\n            \r\n            props.setLabel(label[0].branch)\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        dispatch(get());\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div>\r\n            {branchRedux.loading && <LinearProgressBar title={branchRedux.status} />}\r\n            <TextField\r\n                select\r\n                label=\"Branch\"\r\n                name=\"branch\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                value={branch}\r\n                onChange={(e) => handleChange(e.target.value)}\r\n                fullWidth\r\n                required\r\n                disabled={branchRedux.loading}\r\n            >\r\n                {branchOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                        {option.label}\r\n                    </MenuItem>\r\n                ))}\r\n            </TextField>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Branch;","\r\nimport React from 'react';\r\nimport utilityService from '../../../services/utils/utilityServices';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// MUI Components\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\nimport Paper from '@mui/material/Paper';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\n\r\n// Form Components\r\nimport Roles from './fields/Roles';\r\nimport Branch from './fields/Branch';\r\n\r\n// react-icons\r\nimport { FaCheck } from 'react-icons/fa';\r\nimport { MdVisibility, MdVisibilityOff } from 'react-icons/md';\r\n\r\n\r\nexport default function UsersForm(props) {\r\n\r\n    const usersRedux = useSelector((state) => state.users.value);\r\n    const [username, setUsername] = React.useState(usersRedux.selectedUser?.username ?? \"\");\r\n    const [password, setPassword] = React.useState(\"\");\r\n    const [email, setEmail] = React.useState(usersRedux.selectedUser?.email ?? \"\");\r\n    const [branch, setBranch] = React.useState(usersRedux.selectedUser?.branch ?? \"\");\r\n    const [roles, setRoles] = React.useState(usersRedux.selectedUser?.role_id ?? \"\");\r\n\r\n    const [isShowPassword, setIsShowPassword] = React.useState(false)\r\n    const toggleIsShowPassword = () => setIsShowPassword(!isShowPassword)\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        let data = {\r\n            \"username\": username,\r\n            \"password\": password,\r\n            \"password_confirmation\": password,\r\n            \"email\": email,\r\n            \"role_id\": roles,\r\n            \"branch_id\": branch,\r\n        }\r\n\r\n        props.handleSubmit(data);\r\n    }\r\n\r\n    return (\r\n        <div style={{ minWidth: 200 }}>\r\n            <Paper sx={{ p: 0, m: 0, mt: 1 }} elevation={0}>\r\n                <form onSubmit={(e) => handleSubmit(e)} autoComplete=\"off\">\r\n                    <Grid container spacing={2} >\r\n                        <Grid item xs={12} sx={{ minWidth: 500 }}>\r\n                            <Roles roles={roles} setRoles={setRoles} />\r\n                        </Grid>\r\n                        <Grid item xs={12} sx={{ minWidth: 500 }}>\r\n                            <Branch branch={branch} setBranch={setBranch} />\r\n                        </Grid>\r\n                        {props.action === \"create\" &&\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                    value={email}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    type=\"email\"\r\n                                />\r\n                            </Grid>\r\n                        }\r\n                        {props.action === \"create\" &&\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    onChange={(e) => setUsername(e.target.value)}\r\n                                    value={username}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"username\"\r\n                                    label=\"Username\"\r\n                                    name=\"username\"\r\n                                />\r\n                            </Grid>\r\n                        }\r\n                        {props.action === \"create\" &&\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                    value={password}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Temporary Password\"\r\n                                    type={isShowPassword ? \"text\" : \"password\"}\r\n                                    id=\"password\"\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton onClick={toggleIsShowPassword} size=\"small\">\r\n                                                    {isShowPassword ? <MdVisibility /> : <MdVisibilityOff />}\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                        }\r\n                        <Grid item xs={12}>\r\n                            <LoadingButton\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                loading={usersRedux.loading}\r\n                            >\r\n                                {utilityService.capitalizeFirstLetter(props.action)}\r\n                                <FaCheck style={{ marginLeft: 4 }} />\r\n                            </LoadingButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n// Redux\r\nimport { useDispatch } from 'react-redux';\r\nimport { post, put } from '../../../redux/async/usersAsync';\r\nimport utilityService from '../../../services/utils/utilityServices';\r\n\r\n// Modal Components\r\nimport UsersForm from '../forms/UsersForm';\r\nimport InnerModalDialog from '../shared/Dialog/InnerModalDialog';\r\n\r\nexport default function Create(props) {\r\n\r\n    const title = utilityService.capitalizeFirstLetter(props.action);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = (params) => {\r\n        if(props.action === \"create\"){\r\n            dispatch(post(params));\r\n        }else{\r\n            dispatch(put(params));\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <InnerModalDialog open={props.open} title={`${title} User`} toggle={props.toggle}>\r\n                <UsersForm action={props.action} handleSubmit={handleSubmit} />\r\n            </InnerModalDialog>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// MUI Components\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\nimport Paper from '@mui/material/Paper';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n\r\n// react-icons\r\nimport { FaCheck } from 'react-icons/fa';\r\nimport { MdVisibility, MdVisibilityOff } from 'react-icons/md';\r\n\r\n\r\n\r\nexport default function UsersForm(props) {\r\n\r\n    const usersRedux = useSelector((state) => state.users.value);\r\n    const [password, setPassword] = React.useState(\"\");\r\n    const [isDefaultPassword, setIsDefaultPassword] = React.useState(false);\r\n    const toggleIsDefault = () => setIsDefaultPassword(!isDefaultPassword)\r\n    const [isShowPassword, setIsShowPassword] = React.useState(false)\r\n    const toggleIsShowPassword = () => setIsShowPassword(!isShowPassword)\r\n\r\n    const handleSubmit = async (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        let data = {}\r\n        if (!isDefaultPassword) {\r\n            data = {\r\n                \"password\": password\r\n            }\r\n        }\r\n\r\n        props.handleSubmit(data);\r\n    }\r\n\r\n    return (\r\n        <div style={{ minWidth: 500, width: 500 }}>\r\n            <Paper sx={{ p: 0, m: 0, mt: 1 }} elevation={0}>\r\n                <form onSubmit={(e) => handleSubmit(e)} autoComplete=\"off\">\r\n                    <Grid container spacing={2} >\r\n                        <Grid item xs={12}>\r\n                            <FormControlLabel\r\n                                control={<Checkbox value={isDefaultPassword} onClick={toggleIsDefault} color=\"primary\" />}\r\n                                label=\"Use System's Default Password: abc123\"\r\n                            />\r\n                        </Grid>\r\n                        {!isDefaultPassword &&\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                    value={password}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Temporary Password\"\r\n                                    type={isShowPassword ? \"text\" : \"password\"}\r\n                                    id=\"password\"\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton onClick={toggleIsShowPassword} size=\"small\">\r\n                                                    {isShowPassword ? <MdVisibility /> : <MdVisibilityOff />}\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                        }\r\n                        <Grid item xs={12}>\r\n                            <LoadingButton\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                loading={usersRedux.loading}\r\n                            >\r\n                                Reset\r\n                                <FaCheck style={{ marginLeft: 4 }} />\r\n                            </LoadingButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n// Redux\r\nimport { useDispatch } from 'react-redux';\r\nimport { reset } from '../../../redux/async/usersAsync';\r\n\r\n// Modal Components\r\nimport InnerModalDialog from '../shared/Dialog/InnerModalDialog';\r\nimport ResetPasswordForm from '../forms/ResetPasswordForm';\r\n\r\nexport default function ResetPassword(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = (params) => {\r\n        \r\n        let data = {\r\n            params: params,\r\n            id: props.selected[0]\r\n        }\r\n\r\n        dispatch(reset(data));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <InnerModalDialog open={props.open} title={\"Reset Password\"} toggle={props.toggle}>\r\n                <ResetPasswordForm handleSubmit={handleSubmit} />\r\n            </InnerModalDialog>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// MUI Components\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\n\r\n// Form Components\r\nimport Roles from './fields/Roles';\r\n\r\n// react-icons\r\nimport { FaCheck } from 'react-icons/fa'; \r\n\r\n\r\nexport default function ChangeRoleForm(props) {\r\n\r\n    const usersRedux = useSelector((state) => state.users.value);\r\n    const rolesRedux = useSelector((state) => state.roles.value);\r\n    const [roles, setRoles] = React.useState(usersRedux.selectedUser?.role_id ?? \"\");\r\n    const [label, setLabel] = React.useState(\"\");\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        let data = {\r\n            \"role\": label,\r\n            \"role_id\": roles\r\n        }\r\n\r\n        props.handleSubmit(data);\r\n    }\r\n\r\n    return (\r\n        <div style={{ minWidth: 200 }}>\r\n            <Paper sx={{ p: 0, m: 0, mt: 1 }} elevation={0}>\r\n                <form onSubmit={(e) => handleSubmit(e)} autoComplete=\"off\">\r\n                    <Grid container spacing={2} >\r\n                        <Grid item xs={12} sx={{ minWidth: 500 }}>\r\n                            <Roles roles={roles} setRoles={setRoles} setLabel={setLabel} />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <LoadingButton\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                loading={usersRedux.loading}\r\n                                disabled={rolesRedux.loading}\r\n                            >\r\n                                Change\r\n                                <FaCheck style={{ marginLeft: 4 }} />\r\n                            </LoadingButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n// Redux\r\nimport { useDispatch } from 'react-redux';\r\nimport { change } from '../../../redux/async/usersAsync';\r\n\r\n// Modal Components\r\nimport InnerModalDialog from '../shared/Dialog/InnerModalDialog';\r\nimport ChangeRoleForm from '../forms/ChangeRoleForm';\r\n\r\nexport default function ChangeRoleModal(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = (params) => {\r\n        let data = {\r\n            params: params,\r\n            index: props.selectedParams.index,\r\n            id: props.selectedParams.id\r\n        }\r\n\r\n        dispatch(change(data));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <InnerModalDialog open={props.open} title={\"Change Role\"} toggle={props.toggle}>\r\n                <ChangeRoleForm handleSubmit={handleSubmit} />\r\n            </InnerModalDialog>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// MUI Components\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\n\r\n// Form Components\r\nimport Branch from './fields/Branch';\r\n\r\n// react-icons\r\nimport { FaCheck } from 'react-icons/fa'; \r\n\r\n\r\nexport default function ChangeBranchForm(props) {\r\n\r\n    const usersRedux = useSelector((state) => state.users.value);\r\n    const branchRedux = useSelector((state) => state.branches.value);\r\n    const [branch, setBranch] = React.useState(usersRedux.selectedUser?.role_id ?? \"\");\r\n    const [label, setLabel] = React.useState(\"\");\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        let data = {\r\n            \"branch\": label,\r\n            \"branch_id\": branch\r\n        }\r\n\r\n        props.handleSubmit(data);\r\n    }\r\n\r\n    return (\r\n        <div style={{ minWidth: 200 }}>\r\n            <Paper sx={{ p: 0, m: 0, mt: 1 }} elevation={0}>\r\n                <form onSubmit={(e) => handleSubmit(e)} autoComplete=\"off\">\r\n                    <Grid container spacing={2} >\r\n                        <Grid item xs={12} sx={{ minWidth: 500 }}>\r\n                            <Branch branch={branch} setBranch={setBranch} setLabel={setLabel} />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <LoadingButton\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                loading={usersRedux.loading}\r\n                                disabled={branchRedux.loading}\r\n                            >\r\n                                Change\r\n                                <FaCheck style={{ marginLeft: 4 }} />\r\n                            </LoadingButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n// Redux\r\nimport { useDispatch } from 'react-redux';\r\nimport { branch } from '../../../redux/async/usersAsync';\r\n\r\n// Modal Components\r\nimport InnerModalDialog from '../shared/Dialog/InnerModalDialog';\r\nimport ChangeBranchForm from '../forms/ChangeBranchForm';\r\n\r\nexport default function ChangeBranchModal(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = (params) => { \r\n        \r\n        let data = {\r\n            params: params,\r\n            index: props.selectedParams.index,\r\n            id: props.selectedParams.id\r\n        }\r\n\r\n        dispatch(branch(data));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <InnerModalDialog open={props.open} title={\"Change Branch\"} toggle={props.toggle}>\r\n                <ChangeBranchForm handleSubmit={handleSubmit} />\r\n            </InnerModalDialog>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\n// Utilities \r\nimport utilityService from '../../../services/utils/utilityServices';\r\nimport alertService from '../../../services/alert/alertService';\r\n\r\n// Redux\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { get, destroy, toggle } from '../../../redux/async/usersAsync';\r\n\r\n// MUI Components\r\nimport { DataGrid, GridActionsCellItem } from '@mui/x-data-grid';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n\r\n// Page Components\r\nimport GridLoadingOverlay from '../grid/GridLoadingOverlay';\r\nimport GridNoRowOverlay from '../grid/GridNoRowOverlay';\r\nimport Toolbar from '../grid/Toolbar';\r\nimport StatusSwitch from '../shared/StatusSwitch/StatusSwitch';\r\nimport UserModal from '../modals/UserModal';\r\nimport ResetPasswordModal from '../modals/ResetPasswordModal';\r\nimport ChangeRoleModal from '../modals/ChangeRoleModal';\r\nimport ChangeBranchModal from '../modals/ChangeBranchModal';\r\n\r\n// react-icons\r\nimport { FaRedoAlt, FaTrash, FaUserCog, FaUsers } from 'react-icons/fa';\r\n\r\nconst LoadingOverlayOverride = () => {\r\n    return (\r\n        <GridLoadingOverlay />\r\n    );\r\n}\r\n\r\nconst NoRowOverlayOverride = () => {\r\n    return (\r\n        <GridNoRowOverlay />\r\n    );\r\n}\r\n\r\nconst ToolbarOverride = (props) => {\r\n    return (\r\n        <Toolbar\r\n            onChange={props.onChange}\r\n            isMultipleDelete={props.isMultipleDelete}\r\n            create={props.create}\r\n            delete={props.delete}\r\n        />\r\n    );\r\n}\r\n\r\nexport default function UsersDataTable(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const usersRedux = useSelector((state) => state.users.value);\r\n    const loading = usersRedux.loading;\r\n    const [rowData, setRowData] = React.useState([]);\r\n\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [selectedParams, setSelectedParams] = React.useState({});\r\n    const [isMultipleDelete, setIsMultipleDelete] = React.useState(true);\r\n\r\n    const [modalAction, setModalAction] = React.useState(\"\");\r\n    const [showUserModal, setShowModal] = React.useState(false);\r\n    const toggleUserModal = () => setShowModal(!showUserModal);\r\n    const [showResetPasswordModal, setShowResetPasswordModal] = React.useState(false);\r\n    const toggleResetPasswordModal = () => setShowResetPasswordModal(!showResetPasswordModal);\r\n    const [showChangeRoleModal, setShowChangeRoleModal] = React.useState(false);\r\n    const toggleChangeRoleModal = () => setShowChangeRoleModal(!showChangeRoleModal);\r\n    const [showBranchModal, setShowBranchModal] = React.useState(false);\r\n    const toggleChangeBranchModal = () => setShowBranchModal(!showBranchModal);\r\n\r\n    const width = 200;\r\n    const columns = [\r\n        { field: 'email', headerName: 'Email', flex: 1 },\r\n        {\r\n            field: 'role', headerName: 'Role', width: width, renderCell: (params) => {\r\n                return (\r\n                    <div>\r\n                        <span>\r\n                            {utilityService.capitalizeFirstLetter(params.row.role)}\r\n                        </span>\r\n                    </div>\r\n                );\r\n            }\r\n        },\r\n        {\r\n            field: 'branch', headerName: 'Branch', width: 100, renderCell: (params) => {\r\n                return (\r\n                    <div>\r\n                        <span>\r\n                            {params.row.branch.toUpperCase()}\r\n                        </span>\r\n                    </div>\r\n                );\r\n            }\r\n        },\r\n        { field: 'last_login', headerName: 'Last login', type: 'date', width: width, hide: true },\r\n        { field: 'creator', headerName: 'Created by', width: 150, hide: true },\r\n        {\r\n            field: 'is_active', headerName: 'Status', align: 'center', headerAlign: 'center', sortable: false, renderCell: (params) => {\r\n\r\n                let status = params.row.is_active;\r\n\r\n                return (\r\n                    <Tooltip arrow={true} title={status ? \"Active\" : \"Inactive\"} placement=\"left\">\r\n                        <div>\r\n                            <StatusSwitch status={status} onChange={() => dispatch(toggle({ params: params.row }))} />\r\n                        </div>\r\n                    </Tooltip>\r\n                );\r\n            }\r\n        },\r\n        { field: 'last_login_ip', headerName: 'IP Address', width: width, hide: true },\r\n        { field: 'last_login_device', headerName: 'Device', width: width, hide: true },\r\n        {\r\n            field: 'actions', headerName: 'Options', type: 'actions', getActions: (params) => [\r\n                <GridActionsCellItem\r\n                    icon={<FaUserCog size={18} />}\r\n                    onClick={() => handleChangeRole(params)}\r\n                    label=\"Change Role\"\r\n                    sx={{\r\n                        '&:hover': {\r\n                            color: \"#00BFA5\"\r\n                        }\r\n                    }}\r\n                    showInMenu\r\n                />,\r\n                <GridActionsCellItem\r\n                    icon={<FaUsers size={15} />}\r\n                    onClick={() => handleChangeBranch(params)}\r\n                    label=\"Change Branch\"\r\n                    sx={{\r\n                        '&:hover': {\r\n                            color: \"#00BFA5\"\r\n                        }\r\n                    }}\r\n                    showInMenu\r\n                />,\r\n                <GridActionsCellItem\r\n                    icon={<FaRedoAlt size={15} />}\r\n                    onClick={() => handleReset(params)}\r\n                    label=\"Reset Password\"\r\n                    sx={{\r\n                        '&:hover': {\r\n                            color: \"#00BFA5\"\r\n                        }\r\n                    }}\r\n                    showInMenu\r\n                />,\r\n                <GridActionsCellItem\r\n                    icon={<FaTrash size={15} />}\r\n                    onClick={() => handleDelete(1, params.row.id)}\r\n                    label=\"Delete\"\r\n                    sx={{\r\n                        '&:hover': {\r\n                            color: \"#E45570\"\r\n                        }\r\n                    }}\r\n                    showInMenu\r\n                />\r\n            ]\r\n        },\r\n    ];\r\n\r\n    const handleSelection = (value) => {\r\n\r\n        setSelected(value);\r\n\r\n        if (value.length > 0) {\r\n            setIsMultipleDelete(false);\r\n        } else {\r\n            setIsMultipleDelete(true);\r\n        }\r\n    }\r\n\r\n    const handleChangeRole = async (params) => {\r\n\r\n        setSelectedParams(params.row);\r\n\r\n        let response = await alertService.changeRole();\r\n        if (response.isConfirmed) {\r\n            setShowChangeRoleModal(true);\r\n        }\r\n    }\r\n\r\n    const handleChangeBranch = async (params) => {\r\n\r\n        setSelectedParams(params.row);\r\n\r\n        let response = await alertService.changeBranch();\r\n        if (response.isConfirmed) {\r\n            setShowBranchModal(true);\r\n        }\r\n    }\r\n\r\n    const handleReset = async (params) => {\r\n\r\n        setSelected([params.row.id]);\r\n\r\n        let response = await alertService.reset({ title: \"Reset account password?\", text: \"This account password will be reset\" });\r\n        if (response.isConfirmed) {\r\n            setShowResetPasswordModal(true);\r\n        }\r\n    }\r\n\r\n    const handleDelete = async (count = 0, row = null) => {\r\n\r\n        let rows = selected\r\n\r\n        if (row !== null) {\r\n            rows = [row];\r\n        }\r\n\r\n        let recordCount = count > 0 ? 1 : rows.length;\r\n        let response = await alertService.delete(recordCount);\r\n        if (response.isConfirmed) {\r\n            dispatch(destroy({ 'ids': rows }));\r\n        }\r\n    }\r\n\r\n    const search = (text) => {\r\n        let filteredUsers = utilityService.filterArrayOfObjects(text, usersRedux.users);\r\n        setRowData(filteredUsers);\r\n    };\r\n\r\n    const loadUsers = React.useCallback(() => {\r\n        dispatch(get());\r\n    }, [dispatch])\r\n\r\n    React.useEffect(() => {\r\n        \r\n        let mounted = false;\r\n\r\n        if (!mounted) {\r\n            loadUsers();\r\n        }\r\n\r\n        return () => mounted = true;\r\n\r\n    }, [loadUsers]);\r\n\r\n    return (\r\n        <div style={{ height: 550, width: '100%' }}>\r\n            {showUserModal && <UserModal open={showUserModal} toggle={toggleUserModal} action={modalAction} />}\r\n            {showResetPasswordModal && <ResetPasswordModal open={showResetPasswordModal} toggle={toggleResetPasswordModal} selected={selected} />}\r\n            {showChangeRoleModal && <ChangeRoleModal open={showChangeRoleModal} toggle={toggleChangeRoleModal} selectedParams={selectedParams} />}\r\n            {showBranchModal && <ChangeBranchModal open={showBranchModal} toggle={toggleChangeBranchModal} selectedParams={selectedParams} />}\r\n\r\n            <DataGrid\r\n                rows={rowData.length <= 0 ? usersRedux.users : rowData}\r\n                columns={columns}\r\n                selectionModel={selected}\r\n                onSelectionModelChange={handleSelection}\r\n                checkboxSelection={true}\r\n                loading={loading}\r\n                density=\"standard\"\r\n                disableSelectionOnClick\r\n                disableColumnMenu\r\n                components={{\r\n                    LoadingOverlay: LoadingOverlayOverride,\r\n                    NoRowsOverlay: NoRowOverlayOverride,\r\n                    Toolbar: ToolbarOverride\r\n                }}\r\n                componentsProps={{\r\n                    toolbar: {\r\n                        create: () => { setModalAction(\"create\"); setShowModal(true); },\r\n                        delete: () => { handleDelete() },\r\n                        isMultipleDelete: isMultipleDelete,\r\n                        onChange: (event) => search(event.target.value),\r\n                    },\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}","import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nfunction sleep(delay = 0) {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay);\r\n    });\r\n}\r\n\r\nexport default function Manager() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [options, setOptions] = React.useState([]);\r\n    const loading = open && options.length === 0;\r\n\r\n    React.useEffect(() => {\r\n        let active = true;\r\n\r\n        if (!loading) {\r\n            return undefined;\r\n        }\r\n\r\n        (async () => {\r\n            await sleep(1e3); // For demo purposes.\r\n\r\n            if (active) {\r\n                setOptions([]);\r\n            }\r\n        })();\r\n\r\n        return () => {\r\n            active = false;\r\n        };\r\n    }, [loading]);\r\n\r\n    React.useEffect(() => {\r\n        if (!open) {\r\n            setOptions([]);\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <Autocomplete\r\n            id=\"manager\"\r\n            fullWidth\r\n            open={open}\r\n            onOpen={() => {\r\n                setOpen(true);\r\n            }}\r\n            onClose={() => {\r\n                setOpen(false);\r\n            }}\r\n            isOptionEqualToValue={(option, value) => option.title === value.title}\r\n            getOptionLabel={(option) => option.title}\r\n            options={options}\r\n            loading={loading}\r\n            renderInput={(params) => (\r\n                <TextField\r\n                    {...params}\r\n                    size=\"small\"\r\n                    label=\"Manager\"\r\n                    InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                            <React.Fragment>\r\n                                {loading ? <CircularProgress color=\"primary\" size={15} sx={{ marginRight: 5 }} /> : null}\r\n                                {params.InputProps.endAdornment}\r\n                            </React.Fragment>\r\n                        ),\r\n                    }}\r\n                />\r\n            )}\r\n        />\r\n    );\r\n}\r\n\r\n","\r\nimport React from 'react';\r\nimport utilityServices from '../../../services/utils/utilityServices';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// MUI Components\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\nimport Paper from '@mui/material/Paper';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\n\r\n// react-icons\r\nimport { FaCheck } from 'react-icons/fa';\r\nimport Manager from './fields/Manager';\r\n\r\nexport default function BranchForm(props) {\r\n\r\n    const branchRedux = useSelector((state) => state.branches.value); \r\n    const [branch, setBranch] = React.useState(branchRedux.selectedBranch?.branch?.toUpperCase() ?? \"\");\r\n    const [location, setLocation] = React.useState(branchRedux.selectedBranch?.location ?? \"\");\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        let data = {\r\n            \"data\": {\r\n                \"branch\": branch,\r\n                \"manager_id\": null,\r\n                \"location\": location\r\n            },\r\n            \"params\": branchRedux.selectedBranch\r\n        }\r\n\r\n        props.handleSubmit(data);\r\n    }\r\n\r\n    return (\r\n        <div style={{ minWidth: 200 }}>\r\n            <Paper sx={{ p: 0, m: 0, mt: 1 }} elevation={0}>\r\n                <form onSubmit={(e) => handleSubmit(e)} autoComplete=\"off\">\r\n                    <Grid container spacing={2} >\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                onChange={(e) => setBranch(e.target.value)}\r\n                                value={branch}\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"branch\"\r\n                                label=\"Branch\"\r\n                                name=\"branch\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Manager />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                onChange={(e) => setLocation(e.target.value)}\r\n                                value={location}\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                multiline\r\n                                maxRows={3}\r\n                                minRows={3}\r\n                                required\r\n                                fullWidth\r\n                                id=\"location\"\r\n                                label=\"Location\"\r\n                                name=\"location\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <LoadingButton\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                loading={branchRedux.loading}\r\n                            >\r\n                                {utilityServices.capitalizeFirstLetter(props.action)}\r\n                                <FaCheck style={{ marginLeft: 4 }} />\r\n                            </LoadingButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport utilityService from '../../../services/utils/utilityServices';\r\n\r\n// Redux\r\nimport { useDispatch } from 'react-redux';\r\nimport { post, put } from '../../../redux/async/branchesAsync';\r\n\r\n// Modal Components\r\nimport InnerModalDialog from '../shared/Dialog/InnerModalDialog';\r\nimport BranchForm from '../forms/BranchForm';\r\n\r\nexport default function BranchModal(props) {\r\n\r\n    const title = utilityService.capitalizeFirstLetter(props.action);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = (params) => {\r\n        if (props.action === \"create\") {\r\n            dispatch(post(params));\r\n        } else {            \r\n            dispatch(put(params));\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <InnerModalDialog open={props.open} title={`${title} Branch`} toggle={props.toggle}>\r\n                <BranchForm action={props.action} handleSubmit={handleSubmit} />\r\n            </InnerModalDialog>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\n// Utilities \r\nimport utilityService from '../../../services/utils/utilityServices';\r\nimport alertService from '../../../services/alert/alertService';\r\n\r\n// Redux\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { destroy, get } from '../../../redux/async/branchesAsync';\r\nimport { selectedBranch } from '../../../redux/slices/branchSlice';\r\n\r\n// MUI Components\r\nimport { DataGrid, GridActionsCellItem } from '@mui/x-data-grid';\r\n\r\n// Page Components\r\nimport GridLoadingOverlay from '../grid/GridLoadingOverlay';\r\nimport GridNoRowOverlay from '../grid/GridNoRowOverlay';\r\nimport Toolbar from '../grid/Toolbar';\r\nimport BranchModal from '../modals/BranchModal';\r\n\r\n// react-icons\r\nimport { FaEdit, FaTrash } from 'react-icons/fa';\r\n\r\nconst LoadingOverlayOverride = () => {\r\n    return (\r\n        <GridLoadingOverlay />\r\n    );\r\n}\r\n\r\nconst NoRowOverlayOverride = () => {\r\n    return (\r\n        <GridNoRowOverlay />\r\n    );\r\n}\r\n\r\nconst ToolbarOverride = (props) => {\r\n    return (\r\n        <Toolbar\r\n            onChange={props.onChange}\r\n            isMultipleDelete={props.isMultipleDelete}\r\n            create={props.create}\r\n            delete={props.delete}\r\n        />\r\n    );\r\n}\r\n\r\nexport default function BranchesDataTable(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const branchesRedux = useSelector((state) => state.branches.value);\r\n    const loading = branchesRedux.loading;\r\n    const [rowData, setRowData] = React.useState([]);\r\n\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [isMultipleDelete, setIsMultipleDelete] = React.useState(true);\r\n\r\n    const [modalAction, setModalAction] = React.useState(\"\");\r\n    const [showBranchModal, setShowBranchModal] = React.useState(false);\r\n    const toggleShowBranchModal = () => setShowBranchModal(!showBranchModal);\r\n\r\n    const width = 250;\r\n    const columns = [\r\n        {\r\n            field: 'branch', headerName: 'Branches', width: width, renderCell: (params) => {\r\n                return (\r\n                    <div>\r\n                        <span>\r\n                            {params.row.branch.toUpperCase()}\r\n                        </span>\r\n                    </div>\r\n                );\r\n            }\r\n        },\r\n        {\r\n            field: 'manager', headerName: 'Manager', width: width, renderCell: (params) => {\r\n                return (\r\n                    <div>\r\n                        <span>\r\n                            {params.row.manager === null ? \"...\" : params.row.manager}\r\n                        </span>\r\n                    </div>\r\n                );\r\n            }\r\n        },\r\n        {\r\n            field: 'location', headerName: 'Location', flex: 1, renderCell: (params) => {\r\n                return (\r\n                    <div>\r\n                        <span>\r\n                            {params.row.location === null ? \"...\" : params.row.location}\r\n                        </span>\r\n                    </div>\r\n                );\r\n            }\r\n        },\r\n        {\r\n            field: 'actions', headerName: 'Options', type: 'actions', getActions: (params) => [\r\n                <GridActionsCellItem\r\n                    icon={<FaEdit size={18} />}\r\n                    onClick={() => handleEdit(params)}\r\n                    label=\"Edit\"\r\n                    sx={{\r\n                        '&:hover': {\r\n                            color: \"#00BFA5\"\r\n                        }\r\n                    }}\r\n                    showInMenu\r\n                />,\r\n                <GridActionsCellItem\r\n                    icon={<FaTrash size={15} />}\r\n                    onClick={() => handleDelete(1, params.row.id)}\r\n                    label=\"Delete\"\r\n                    sx={{\r\n                        '&:hover': {\r\n                            color: \"#E45570\"\r\n                        }\r\n                    }}\r\n                    showInMenu\r\n                />\r\n            ]\r\n        },\r\n    ];\r\n\r\n    const handleSelection = (value) => {\r\n\r\n        setSelected(value);\r\n\r\n        if (value.length > 0) {\r\n            setIsMultipleDelete(false);\r\n        } else {\r\n            setIsMultipleDelete(true);\r\n        }\r\n    }\r\n\r\n    const handleEdit = async (params) => {\r\n        dispatch(selectedBranch(params.row));\r\n        setModalAction(\"edit\");\r\n        setShowBranchModal(true);\r\n    }\r\n\r\n    const handleDelete = async (count = 0, row = null) => {\r\n\r\n        let rows = selected\r\n\r\n        if (row !== null) {\r\n            rows = [row];\r\n        }\r\n\r\n        let recordCount = count > 0 ? 1 : rows.length;\r\n        let response = await alertService.delete(recordCount);\r\n        if (response.isConfirmed) {\r\n            dispatch(destroy({ 'ids': rows }))\r\n        }\r\n    }\r\n\r\n    const search = (text) => {\r\n        let filtered = utilityService.filterArrayOfObjects(text, branchesRedux.branches);\r\n        setRowData(filtered);\r\n    };\r\n\r\n    const loadBranches = React.useCallback(() => {\r\n        dispatch(get());\r\n    }, [dispatch])\r\n\r\n    React.useEffect(() => {\r\n        let mounted = false;\r\n\r\n        if (!mounted) {\r\n            loadBranches();\r\n        }\r\n\r\n        return () => mounted = true;\r\n    }, [loadBranches]);\r\n\r\n    return (\r\n        <div style={{ height: 550, width: '100%' }}>\r\n            {showBranchModal && <BranchModal open={showBranchModal} toggle={toggleShowBranchModal} action={modalAction} />}\r\n            <DataGrid\r\n                rows={rowData.length <= 0 ? branchesRedux.branches : rowData}\r\n                columns={columns}\r\n                selectionModel={selected}\r\n                onSelectionModelChange={handleSelection}\r\n                checkboxSelection={true}\r\n                loading={loading}\r\n                density=\"standard\"\r\n                disableSelectionOnClick\r\n                disableColumnMenu\r\n                components={{\r\n                    LoadingOverlay: LoadingOverlayOverride,\r\n                    NoRowsOverlay: NoRowOverlayOverride,\r\n                    Toolbar: ToolbarOverride\r\n                }}\r\n                componentsProps={{\r\n                    toolbar: {\r\n                        create: () => { setModalAction(\"create\"); setShowBranchModal(true); dispatch(selectedBranch({})); },\r\n                        delete: () => { handleDelete() },\r\n                        isMultipleDelete: isMultipleDelete,\r\n                        onChange: (event) => search(event.target.value),\r\n                    },\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}","\r\nimport React from 'react';\r\nimport utilityServices from '../../../services/utils/utilityServices';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// MUI Components\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\nimport Paper from '@mui/material/Paper';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\n\r\n// react-icons\r\nimport { FaCheck } from 'react-icons/fa';\r\n\r\nexport default function RolesForm(props) {\r\n\r\n    const rolesRedux = useSelector((state) => state.roles.value);\r\n    const [roleName, setRoleName] = React.useState(rolesRedux.selectedRole?.role ?? \"\");\r\n    const [roleDescription, setRoleDescription] = React.useState(rolesRedux.selectedRole?.description ?? \"\");\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        let data = {\r\n            \"data\": {\r\n                \"role\": roleName,\r\n                \"description\": roleDescription\r\n            },\r\n            \"params\": rolesRedux.selectedRole\r\n        }\r\n\r\n        props.handleSubmit(data);\r\n    }\r\n\r\n    return (\r\n        <div style={{ minWidth: 200 }}>\r\n            <Paper sx={{ p: 0, m: 0, mt: 1 }} elevation={0}>\r\n                <form onSubmit={(e) => handleSubmit(e)} autoComplete=\"off\">\r\n                    <Grid container spacing={2} >\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                onChange={(e) => setRoleName(e.target.value)}\r\n                                value={roleName}\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"role\"\r\n                                label=\"Role\"\r\n                                name=\"role\" \r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                onChange={(e) => setRoleDescription(e.target.value)}\r\n                                value={roleDescription}\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                multiline\r\n                                maxRows={5}\r\n                                minRows={5}\r\n                                required\r\n                                fullWidth\r\n                                id=\"description\"\r\n                                label=\"Description\"\r\n                                name=\"description\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <LoadingButton\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                loading={rolesRedux.loading}\r\n                            >\r\n                                {utilityServices.capitalizeFirstLetter(props.action)}\r\n                                <FaCheck style={{ marginLeft: 4 }} />\r\n                            </LoadingButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport utilityService from '../../../services/utils/utilityServices';\r\n\r\n// Redux\r\nimport { useDispatch } from 'react-redux';\r\nimport { post, put } from '../../../redux/async/rolesAsync';\r\n\r\n// Modal Components\r\nimport InnerModalDialog from '../shared/Dialog/InnerModalDialog';\r\nimport RolesForm from '../forms/RolesForm';\r\n\r\nexport default function RolesModal(props) {\r\n\r\n    const title = utilityService.capitalizeFirstLetter(props.action);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = (params) => {\r\n        if (props.action === \"create\") {\r\n            dispatch(post(params));\r\n        } else {            \r\n            dispatch(put(params));\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <InnerModalDialog open={props.open} title={`${title} Role`} toggle={props.toggle}>\r\n                <RolesForm action={props.action} handleSubmit={handleSubmit} />\r\n            </InnerModalDialog>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\n// Utilities \r\nimport utilityService from '../../../services/utils/utilityServices';\r\nimport alertService from '../../../services/alert/alertService';\r\n\r\n// Redux\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { destroy, get } from '../../../redux/async/rolesAsync';\r\nimport { selectedRole } from '../../../redux/slices/rolesSlice';\r\n\r\n// MUI Components\r\nimport { DataGrid, GridActionsCellItem } from '@mui/x-data-grid';\r\n\r\n// Page Components\r\nimport GridLoadingOverlay from '../grid/GridLoadingOverlay';\r\nimport GridNoRowOverlay from '../grid/GridNoRowOverlay';\r\nimport Toolbar from '../grid/Toolbar';\r\nimport RolesModal from '../modals/RolesModal';\r\n\r\n// react-icons\r\nimport { FaEdit, FaTrash } from 'react-icons/fa';\r\n\r\nconst LoadingOverlayOverride = () => {\r\n    return (\r\n        <GridLoadingOverlay />\r\n    );\r\n}\r\n\r\nconst NoRowOverlayOverride = () => {\r\n    return (\r\n        <GridNoRowOverlay />\r\n    );\r\n}\r\n\r\nconst ToolbarOverride = (props) => {\r\n    return (\r\n        <Toolbar\r\n            onChange={props.onChange}\r\n            isMultipleDelete={props.isMultipleDelete}\r\n            create={props.create}\r\n            delete={props.delete}\r\n        />\r\n    );\r\n}\r\n\r\nexport default function RolesDataTable(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const rolesRedux = useSelector((state) => state.roles.value);\r\n    const loading = rolesRedux.loading;\r\n    const [rowData, setRowData] = React.useState([]);\r\n\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [isMultipleDelete, setIsMultipleDelete] = React.useState(true);\r\n\r\n    const [modalAction, setModalAction] = React.useState(\"\");\r\n    const [showRolesModal, setShowRolesModal] = React.useState(false);\r\n    const toggleShowRolesModal = () => setShowRolesModal(!showRolesModal);\r\n\r\n    const width = 250;\r\n    const columns = [\r\n        {\r\n            field: 'role', headerName: 'Roles', width: width, renderCell: (params) => {\r\n                return (\r\n                    <div>\r\n                        <span>\r\n                            {utilityService.capitalizeFirstLetter(params.row.role)}\r\n                        </span>\r\n                    </div>\r\n                );\r\n            }\r\n        },\r\n        {\r\n            field: 'description', headerName: 'Description', flex: 1, renderCell: (params) => {\r\n                return (\r\n                    <div>\r\n                        <span>\r\n                            {params.row.description === null ? \"...\" : params.row.description}\r\n                        </span>\r\n                    </div>\r\n                );\r\n            }\r\n        },\r\n        {\r\n            field: 'actions', headerName: 'Options', type: 'actions', getActions: (params) => [\r\n                <GridActionsCellItem\r\n                    icon={<FaEdit size={18} />}\r\n                    onClick={() => handleEdit(params)}\r\n                    label=\"Edit\"\r\n                    sx={{\r\n                        '&:hover': {\r\n                            color: \"#00BFA5\"\r\n                        }\r\n                    }}\r\n                    showInMenu\r\n                />,\r\n                <GridActionsCellItem\r\n                    icon={<FaTrash size={15} />}\r\n                    onClick={() => handleDelete(1, params.row.id)}\r\n                    label=\"Delete\"\r\n                    sx={{\r\n                        '&:hover': {\r\n                            color: \"#E45570\"\r\n                        }\r\n                    }}\r\n                    showInMenu\r\n                />\r\n            ]\r\n        },\r\n    ];\r\n\r\n    const handleSelection = (value) => {\r\n\r\n        setSelected(value);\r\n\r\n        if (value.length > 0) {\r\n            setIsMultipleDelete(false);\r\n        } else {\r\n            setIsMultipleDelete(true);\r\n        }\r\n    }\r\n\r\n    const handleEdit = async (params) => {\r\n        dispatch(selectedRole(params.row));\r\n        setModalAction(\"edit\");\r\n        setShowRolesModal(true);\r\n    }\r\n\r\n    const handleDelete = async (count = 0, row = null) => {\r\n\r\n        let rows = selected\r\n\r\n        if (row !== null) {\r\n            rows = [row];\r\n        }\r\n\r\n        let recordCount = count > 0 ? 1 : rows.length;\r\n        let response = await alertService.delete(recordCount);\r\n        if (response.isConfirmed) {\r\n            dispatch(destroy({ 'ids': rows }))\r\n        }\r\n    }\r\n\r\n    const search = (text) => {\r\n        let filtered = utilityService.filterArrayOfObjects(text, rolesRedux.roles);\r\n        setRowData(filtered);\r\n    };\r\n\r\n    const loadRoles = React.useCallback(() => {\r\n        dispatch(get());\r\n    }, [dispatch])\r\n\r\n    React.useEffect(() => {\r\n        let mounted = false;\r\n\r\n        if (!mounted) {\r\n            loadRoles();\r\n        }\r\n\r\n        return () => mounted = true;\r\n\r\n    }, [loadRoles]);\r\n\r\n    return (\r\n        <div style={{ height: 550, width: '100%' }}>\r\n            {showRolesModal && <RolesModal open={showRolesModal} toggle={toggleShowRolesModal} action={modalAction} />}\r\n            <DataGrid\r\n                rows={rowData.length <= 0 ? rolesRedux.roles : rowData}\r\n                columns={columns}\r\n                selectionModel={selected}\r\n                onSelectionModelChange={handleSelection}\r\n                checkboxSelection={true}\r\n                loading={loading}\r\n                density=\"standard\"\r\n                disableSelectionOnClick\r\n                disableColumnMenu\r\n                components={{\r\n                    LoadingOverlay: LoadingOverlayOverride,\r\n                    NoRowsOverlay: NoRowOverlayOverride,\r\n                    Toolbar: ToolbarOverride\r\n                }}\r\n                componentsProps={{\r\n                    toolbar: {\r\n                        create: () => { setModalAction(\"create\"); setShowRolesModal(true); dispatch(selectedRole({})); },\r\n                        delete: () => { handleDelete() },\r\n                        isMultipleDelete: isMultipleDelete,\r\n                        onChange: (event) => search(event.target.value),\r\n                    },\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}","import UsersDataTable from '../../datatable/UsersDataTable';\r\nimport BranchesDataTable from '../../datatable/BranchesDataTable';\r\nimport RolesDataTable from '../../datatable/RolesDataTable';\r\n\r\n// react-icons \r\nimport { FaUsers, FaBuilding, FaUsersCog } from 'react-icons/fa';\r\n\r\n\r\nconst options = [\r\n    {\r\n        name: 'Accounts',\r\n        icon: <FaUsers size={20} style={{ marginRight: 5 }} />,\r\n        content: <UsersDataTable />,\r\n    },\r\n    {\r\n        name: 'Branches',\r\n        icon: <FaBuilding size={20} style={{ marginRight: 5 }} />,\r\n        content: <BranchesDataTable />,\r\n    }, \r\n    {\r\n        name: 'Roles',\r\n        icon: <FaUsersCog size={20} style={{ marginRight: 5 }} />,\r\n        content: <RolesDataTable />,\r\n    },\r\n];\r\n\r\nexport default options;","import * as React from 'react';\r\n\r\n// MUI Components \r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\n\r\n// Page Components\r\nimport TabPanel from './components/TabPanel2';\r\n\r\n// react-icons\r\nimport { FaUserLock } from 'react-icons/fa';\r\n\r\n// options\r\nimport userstabs from './options/userstabs';\r\n\r\nexport default function UsersTabs() {\r\n\r\n    const options = userstabs;\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n\r\n    return (\r\n        <Box\r\n            sx={{ display: 'flex', flexGrow: 1, flexDirection: 'row', height: '100vh', width: '100vw', overflow: 'hidden' }}\r\n        >\r\n            <Box>\r\n                <Box display=\"flex\" flexDirection=\"row\" sx={{ p: 1, ml: 0, mr: -10, width: 220, backgroundColor: '#eee' }}>\r\n                    <FaUserLock color='#00BFA5' size={25} style={{ marginRight: 5, marginTop: 2, marginLeft: 5 }} />\r\n                    <Typography variant=\"h6\">\r\n                        Users\r\n                    </Typography>\r\n                </Box>\r\n                <Tabs\r\n                    orientation=\"vertical\"\r\n                    variant=\"scrollable\"\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    sx={{ height: '100vh', flexGrow: 1, width: 220, pt: 0, borderRight: '2px solid #eee' }}\r\n                    TabIndicatorProps={{\r\n                        style: {\r\n                            right: 1,\r\n                            height: 30,\r\n                            marginTop: 10\r\n                        }\r\n                    }}\r\n                >\r\n\r\n                    {\r\n                        options.map((data, index) => {\r\n                            return <Tab onClick={() => handleChange(index)} sx={{ alignItems: \"start\" }} key={`tabkey-${index}`} label={\r\n                                <Typography variant=\"subtitle2\">\r\n                                    <Box display=\"flex\">\r\n                                        {data.icon}\r\n                                        {data.name}\r\n                                    </Box>\r\n                                </Typography>\r\n                            } />\r\n                        })\r\n                    }\r\n                </Tabs>\r\n            </Box>\r\n            <Box display=\"flex\" flexGrow={1}>\r\n                {\r\n                    options.map((data, index) => {\r\n                        return <TabPanel value={value} index={index} key={`tabpanelkey-${index}`}>\r\n                            <Paper square elevation={0} sx={{ m: 1, height: 600, width: 'inherit' }}>\r\n                                {data.content}\r\n                            </Paper>\r\n                        </TabPanel>\r\n                    })\r\n                }\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport UsersTabs from '../../tabs/UsersTabs'\r\n\r\nexport default function UsersPage() {\r\n    return (\r\n        <div>\r\n            <UsersTabs />\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}