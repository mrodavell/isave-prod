{"version":3,"sources":["../node_modules/@mui/material/styles/useTheme.js","app/views/components/tabs/components/TabPanel3.js","../node_modules/@mui/utils/esm/ownerDocument.js","../node_modules/@mui/utils/esm/ownerWindow.js","app/views/components/pages/common/ReportsPage.js"],"names":["useTheme","useThemeSystem","defaultTheme","TabPanel3","props","children","value","index","other","role","hidden","style","backgroundColor","maxWidth","minHeight","height","overflow","padding","sx","p","m","ownerDocument","node","document","ownerWindow","defaultView","window","ReportsPage","options","name","icon","size","marginRight","content","React","useState","setValue","handleChange","newValue","mt","bgcolor","pt","borderBottom","mb","TabIndicatorProps","display","map","data","minWidth","borderTopLeftRadius","borderTopRightRadius","border","onClick","label","variant","color"],"mappings":"iGAAA,2DAGe,SAASA,IAQtB,OAPcC,YAAeC,O,6GCwBhBC,IAzBf,SAAmBC,GAAQ,IAAD,EACdC,EAAqCD,EAArCC,SAAUC,EAA2BF,EAA3BE,MAAOC,EAAoBH,EAApBG,MAAUC,EAAnC,YAA6CJ,EAA7C,GAEA,OACI,6CACIK,KAAK,WACLC,OAAQJ,IAAUC,GACdC,GAHR,IAIIG,MAAO,CACHC,gBAAiB,OACjBC,SAAU,OACVC,UAAS,UAAEV,EAAMW,cAAR,QAAkB,IAC3BC,SAAU,SACVC,QAAS,GATjB,SAYKX,IAAUC,GACP,cAAC,IAAD,CAAKW,GAAI,CAAEC,EAAG,EAAGC,EAAG,EAAGJ,SAAU,UAAjC,SACKX,S,iCCrBN,SAASgB,EAAcC,GACpC,OAAOA,GAAQA,EAAKD,eAAiBE,SADvC,mC,iCCAA,+CACe,SAASC,EAAYF,GAElC,OADYD,YAAcC,GACfG,aAAeC,S,yKCEb,SAASC,IAEpB,IAAMC,EAAU,CACZ,CACIC,KAAM,UACNC,KAAM,cAAC,IAAD,CAAWC,KAAM,GAAIpB,MAAO,CAAEqB,YAAa,KACjDC,QAAS,SAAC7B,GAAD,OAAW,QAI5B,EAA0B8B,IAAMC,SAAS,GAAzC,mBAAO7B,EAAP,KAAc8B,EAAd,KAEMC,EAAe,SAACC,GAClBF,EAASE,IAGb,OACI,cAAC,IAAD,CAAKpB,GAAI,CAAEE,EAAG,GAAd,SACI,eAAC,IAAD,CAAKF,GAAI,CAAEL,SAAU,OAAQ0B,GAAI,EAAGC,QAAS,oBAA7C,UACI,cAAC,IAAD,CACIlC,MAAOA,EACPY,GAAI,CAAEC,EAAG,EAAGsB,GAAI,EAAGC,aAAc,iBAAkBC,GAAI,GACvDC,kBAAmB,CACfjC,MAAO,CACHkC,QAAS,SALrB,SAUQjB,EAAQkB,KAAI,SAACC,EAAMxC,GACf,OAAO,cAAC,IAAD,CAEHW,GAAI,CACA8B,SAAU,IACVpC,gBAAkBL,IAAUD,EAAS,UAAY,SACjD2C,oBAAqB,EACrBC,qBAAsB,EACtBC,OAAQ,kBAEZC,QAAS,kBAAMf,EAAa9B,IAC5B8C,MACI,cAAC,IAAD,CAAYC,QAAQ,WAAWC,MAAQhD,IAAUD,EAAS,OAAS,OAAnE,SACI,eAAC,IAAD,CAAKuC,QAAQ,OAAb,UACKE,EAAKjB,KACLiB,EAAKlB,WAdf,iBACYtB,SAuB3BqB,EAAQkB,KAAI,SAACC,EAAMxC,GACf,OAAO,cAAC,IAAD,CAAUQ,OAAQ,IAAKT,MAAOA,EAAOC,MAAOA,EAA5C,SACFwC,EAAKd,QAAQ,CAAEI,aAAc,kBAAMA,EAAa,OAD9C,sBAAuE9B","file":"static/js/42.2515fe98.chunk.js","sourcesContent":["import * as React from 'react';\nimport { useTheme as useThemeSystem } from '@mui/system';\nimport defaultTheme from './defaultTheme';\nexport default function useTheme() {\n  const theme = useThemeSystem(defaultTheme);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n\n  return theme;\n}","import React from 'react'\r\nimport { Box } from '@mui/system';\r\n\r\nfunction TabPanel3(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            {...other}\r\n            style={{\r\n                backgroundColor: \"#FFF\",\r\n                maxWidth: '100%',\r\n                minHeight: props.height ?? 400,  \r\n                overflow: 'hidden',\r\n                padding: 1,\r\n            }}\r\n        >\r\n            {value === index &&\r\n                <Box sx={{ p: 0, m: 0, overflow: 'hidden' }}>\r\n                    {children}\r\n                </Box>\r\n            }\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default TabPanel3\r\n","export default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","import ownerDocument from './ownerDocument';\nexport default function ownerWindow(node) {\n  const doc = ownerDocument(node);\n  return doc.defaultView || window;\n}","import React from 'react';\r\nimport { Box, Typography, Tab, Tabs } from '@mui/material';\r\nimport TabPanel from '../../tabs/components/TabPanel3';\r\nimport { FaFileAlt } from 'react-icons/fa';\r\n\r\nexport default function ReportsPage() {\r\n\r\n    const options = [\r\n        {\r\n            name: 'Reports',\r\n            icon: <FaFileAlt size={15} style={{ marginRight: 5 }} />,\r\n            content: (props) => null,\r\n        },\r\n    ];\r\n\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ m: 1 }}>\r\n            <Box sx={{ maxWidth: '100%', mt: 0, bgcolor: 'background.paper' }}>\r\n                <Tabs\r\n                    value={value}\r\n                    sx={{ p: 0, pt: 0, borderBottom: '1px solid #ccc', mb: 1 }}\r\n                    TabIndicatorProps={{\r\n                        style: {\r\n                            display: \"none\"\r\n                        }\r\n                    }}\r\n                >\r\n                    {\r\n                        options.map((data, index) => {\r\n                            return <Tab\r\n                                key={`tabkey-${index}`}\r\n                                sx={{\r\n                                    minWidth: 200,\r\n                                    backgroundColor: (index === value) ? \"#00bfa5\" : \"#FFFFF\",\r\n                                    borderTopLeftRadius: 5,\r\n                                    borderTopRightRadius: 5,\r\n                                    border: '1px solid #ccc'\r\n                                }}\r\n                                onClick={() => handleChange(index)}\r\n                                label={\r\n                                    <Typography variant=\"caption1\" color={(index === value) ? \"#FFF\" : \"#000\"}>\r\n                                        <Box display=\"flex\">\r\n                                            {data.icon}\r\n                                            {data.name}\r\n                                        </Box>\r\n                                    </Typography>\r\n                                }\r\n                            />\r\n\r\n                        })\r\n                    }\r\n                </Tabs>\r\n                {\r\n                    options.map((data, index) => {\r\n                        return <TabPanel height={550} value={value} index={index} key={`tabpanelkey-${index}`}>\r\n                            {data.content({ handleChange: () => handleChange(0) })}\r\n                        </TabPanel>\r\n                    })\r\n                }\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n"],"sourceRoot":""}