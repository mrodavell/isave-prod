{"version":3,"sources":["assets/login-cover.png","app/views/containers/Landing/components/Login.js"],"names":["useStyles","makeStyles","theme","title","fontWeight","marginTop","paper","padding","spacing","margin","display","flexDirection","justifyContent","alignItems","height","maxHeight","form","width","submit","color","loginCover","backgroundColor","backgroundImage","LoginCover","backgroundSize","backgroundPosition","backgroundRepeat","Login","props","dispatch","useDispatch","classes","useState","loading","setLoading","email","setEmail","password","setPassword","isShowPassword","setIsShowPassword","handleLogin","e","a","preventDefault","postData","authRepository","login","response","authData","data","error","toast","modalError","message","storage","setItem","getMasterfiles","token","is_first_login","role","id","reg_type","setIsFirstLogin","setUser","style","Container","component","sx","maxWidth","Box","mt","mb","Paper","elevation","minHeight","Grid","container","item","xs","sm","square","className","Typography","variant","size","marginLeft","onSubmit","autoComplete","TextField","onChange","target","value","required","fullWidth","name","label","placeholder","autoFocus","InputProps","endAdornment","InputAdornment","position","type","IconButton","onClick","mr","LoadingButton","textAlign","to","underline","clsx"],"mappings":"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","file":"static/js/45.f0ab3211.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/login-cover.a710124e.png\";","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// Services\r\nimport toast from '../../../../services/toast/toastService';\r\n// Redux\r\nimport { useDispatch } from 'react-redux';\r\nimport { setUser } from '../../../../redux/slices/authSlice'; \r\nimport { get as getMasterfiles } from '../../../../redux/async/masterfilesAsync';\r\nimport { setIsFirstLogin } from '../../../../redux/slices/systemSlice';\r\n// Repository \r\nimport authRepository from '../../../../repositories/authRepository';\r\n// MUI Components  \r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Container from \"@mui/material/Container\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\n\r\n// react-icons\r\nimport { MdLogin, MdPerson, MdVisibility, MdVisibilityOff } from 'react-icons/md';\r\n\r\n// Page Styling\r\nimport { makeStyles } from '@mui/styles';\r\nimport LoginCover from '../../../../../assets/login-cover.png'\r\nimport clsx from 'clsx';\r\nimport storage from '../../../../services/storage/storageService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        fontWeight: \"bold\",\r\n        marginTop: 10\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(4),\r\n        margin: theme.spacing(0, 0, 0, 0),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: \"left\",\r\n        alignItems: 'left',\r\n        height: '100%',\r\n        maxHeight: '100%',\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(1, 0, 2, 0),\r\n        color: '#ffffff'\r\n    },\r\n    loginCover: {\r\n        backgroundColor: \"transparent !important\",\r\n        backgroundImage: `url(${LoginCover})`,\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n        backgroundRepeat: \"no-repeat\",\r\n    }\r\n}));\r\n\r\nexport default function Login(props) { \r\n\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [isShowPassword, setIsShowPassword] = useState(false);\r\n    const toggleIsShowPassword = () => setIsShowPassword(!isShowPassword);\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            setLoading(true);\r\n            let postData = { 'email': email, 'password': password };\r\n\r\n            let response = await authRepository.login(postData);\r\n            \r\n            let authData = response.data;  \r\n            if (!response.error) {\r\n                \r\n                storage.setItem('_token', authData);\r\n \r\n                dispatch(getMasterfiles(authData.token));     \r\n                  \r\n                if(authData.is_first_login === 1 && authData.role.id === 5 && authData.reg_type === \"online\"){            \r\n                    storage.setItem('_showOnBoard', true);\r\n                    storage.setItem('_first', authData.is_first_login);                    \r\n                    dispatch(setIsFirstLogin(authData.is_first_login));\r\n                } else{ \r\n                    storage.setItem('_showOnBoard', false);\r\n                    storage.setItem('_first', 0);                    \r\n                    dispatch(setIsFirstLogin(0));\r\n                }\r\n\r\n                dispatch(setUser(authData));                \r\n            }else{ \r\n                toast.modalError(response.message);\r\n            }\r\n\r\n        } catch (e) {  \r\n            toast.modalError('Unable to login');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n\r\n    }\r\n \r\n    return (\r\n        <div style={{ height: \"100%\", width: \"100%\" }}>\r\n            <Container component=\"main\" sx={{ maxWidth: '1100px !important' }}>\r\n                <Box sx={{ mt: 5, mb: 10 }}>\r\n                    <Paper elevation={0} sx={{ minHeight: 500 }}>\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <Paper square elevation={0} className={classes.paper}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\">\r\n                                        <Typography sx={{ mt: 2 }} variant=\"h5\" className={classes.title}>\r\n                                            Login\r\n                                        </Typography>\r\n                                        <MdLogin size={25} style={{ marginTop: 15, marginLeft: 5 }} />\r\n                                    </Box>\r\n                                    <form onSubmit={(e) => handleLogin(e)} className={classes.form} autoComplete=\"off\">\r\n                                        <TextField\r\n                                            onChange={(e) => { setEmail(e.target.value); }}\r\n                                            variant=\"outlined\"\r\n                                            size=\"large\"\r\n                                            margin=\"normal\"\r\n                                            required\r\n                                            fullWidth\r\n                                            name=\"email\"\r\n                                            id=\"email\"\r\n                                            label=\"Email\"\r\n                                            placeholder=\"Email\"\r\n                                            autoFocus\r\n                                            InputProps={{\r\n                                                endAdornment: (\r\n                                                    <InputAdornment position=\"end\">\r\n                                                        <MdPerson size={20} />\r\n                                                    </InputAdornment>\r\n                                                ),\r\n                                            }}\r\n                                        />\r\n                                        <TextField\r\n                                            type={isShowPassword ? \"text\" : \"password\"}\r\n                                            onChange={(e) => { setPassword(e.target.value); }}\r\n                                            variant=\"outlined\"\r\n                                            size=\"large\"\r\n                                            margin=\"normal\"\r\n                                            required\r\n                                            fullWidth\r\n                                            name=\"password\"\r\n                                            label=\"Password\"\r\n                                            placeholder=\"Password\"\r\n                                            id=\"password\"\r\n                                            InputProps={{\r\n                                                endAdornment: (\r\n                                                    <InputAdornment position=\"end\">\r\n                                                        <IconButton onClick={toggleIsShowPassword} size=\"small\" sx={{ mr: -0.5 }}>\r\n                                                            {isShowPassword ?\r\n                                                                <MdVisibility size={20} />\r\n                                                                :\r\n                                                                <MdVisibilityOff size={20} />\r\n                                                            }\r\n                                                        </IconButton>\r\n                                                    </InputAdornment>\r\n                                                ),\r\n                                            }}\r\n                                        />\r\n                                        <LoadingButton\r\n                                            type=\"submit\"\r\n                                            fullWidth\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.submit}\r\n                                            loading={loading}\r\n                                            sx={{ mt: 2 }}\r\n                                            size=\"large\"\r\n                                        >\r\n                                            Log In\r\n                                        </LoadingButton>\r\n                                        <Box textAlign=\"center\" mt={2}>\r\n                                            <Link color='#00BFA5' to={'/forgot'} variant=\"body1\" underline=\"hover\">\r\n                                                Forgot password?\r\n                                            </Link>\r\n                                        </Box>\r\n                                    </form>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <Paper square elevation={0} className={clsx(classes.paper, classes.loginCover)}></Paper>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Box>\r\n            </Container>\r\n        </div>\r\n    );\r\n}"],"sourceRoot":""}